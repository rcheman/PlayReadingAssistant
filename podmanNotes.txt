Podman notes for containerizing the database:

If any changes are made to the Dockerfile, create the image with this command:
podman build -t play-reading .

format: podman build -t <image name> .

To spin up the container do this command:
podman run -v play_volume:/var/lib/postgresql/data --name postgres-db -e POSTGRES_PASSWORD=pass -e POSTGRES_USER=playreading -e POSTGRES_DB=playreadingparty -d -p 5432:5432 play-reading

format: podman run -v <volume name>:<path in container> --name <container name> -e POSTGRES_PASSWORD=<password> -e POSTGRES_USER=<user> -e POSTGRES_DB=<database name> -d -p 5432:5432 <image name>

Environment Variable notes:
*******************************
set -o allexport && source .env && set +o allexport => Adds the environment variables from the file to be generally accessible environment variables

*******************
General Podman notes:
podman ps  -> gets all open containers
podman ps -a => gets all containers in general
podman images => shows all the images
podman pull <image repository path> => pulls that image version. Wasn't able to use the shortname and had to give the full docker.io/postgres:15.2
podman start <container name>  => starts that container after it has already been built
podman exec -it <container name> bash => starts the container and opens you in the terminal for it
podman volume ls => list all volumes
podman volume prune => remove all unused volumes
podman volume create <volume name> => create a new volume
podman inspect <container name> => displays lots of useful information about your container
